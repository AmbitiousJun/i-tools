.make-image-envs-cnb: &make-image-envs-cnb
  - name: set IMAGE_NAME
    script: echo -n "$CNB_REPO_SLUG"
    exports:
      info: IMAGE_NAME
  - name: set IMAGE_VERSION
    script: echo -n "$CNB_BRANCH" | cut -d "/" -f1
    exports:
      info: IMAGE_VERSION
  - name: use latest if main
    if: |
      [ "$CNB_BRANCH" = "main" ]
    script: echo -n "latest"
    exports:
      info: IMAGE_VERSION
  # - name: set IMAGE_NAME_WITH_TAG
  #   script: echo -n "${CNB_DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_VERSION}"
  #   exports:
  #     info: IMAGE_NAME_WITH_TAG
  - name: SET TAGS
    script: |
      REGISTRY_LIST="$CNB_DOCKER_REGISTRY ghcr.io"
      
      TAGS=""
      
      # 为每个仓库生成标签
      for registry in $REGISTRY_LIST; do
        # 标签
        TAGS="${TAGS} ${registry}/${IMAGE_NAME}:${IMAGE_VERSION}"        
        # 添加Git SHA标签
        TAGS="${TAGS} ${registry}/${IMAGE_NAME}:${CNB_COMMIT_SHORT}"
      done
      
      echo -n "$TAGS"
    exports:
      info: BUILD_TAGS

.build-by-arch-cnb: &build-by-arch-cnb
  - name: docker login for docker.cnb.cool
    script: docker login -u "$CNB_TOKEN_USER_NAME" -p "$CNB_TOKEN" $CNB_DOCKER_REGISTRY
  - name: docker login for ghcr.io
    script: docker login -u "$GITHUB_USERNAME" -p "$GITHUB_PACKAGE_TOKEN" ghcr.io
  - name: set DOCKERFILE_DIR
    script: |
      if [ -f "docker/Dockerfile.linux.$BUILD_ARCH" ]; then
        echo -n "docker/Dockerfile.linux.$BUILD_ARCH"
      else
        echo -n "Dockerfile"
      fi
    exports:
      info: DOCKERFILE_DIR
  - name: docker build & push
    if: |
      [ -f $DOCKERFILE_DIR ]
    script:
      - |
        # 构建命令，将所有标签添加到build命令中
        BUILD_CMD="docker build -f $DOCKERFILE_DIR"
        for tag in $BUILD_TAGS; do
          BUILD_CMD="$BUILD_CMD -t $tag"
        done
        BUILD_CMD="$BUILD_CMD ."
        echo "执行构建命令: $BUILD_CMD"
        eval $BUILD_CMD
      - |
        # 推送所有标签，带错误处理
        PUSH_SUCCESS=0
        PUSH_FAILED=0
        
        for tag in $BUILD_TAGS; do
          echo "正在推送: $tag"
          if docker push $tag; then
            echo "✅ 成功推送: $tag"
            PUSH_SUCCESS=$((PUSH_SUCCESS + 1))
          else
            echo "❌ 推送失败: $tag"
            PUSH_FAILED=$((PUSH_FAILED + 1))
          fi
        done
        
        echo "推送统计: 成功 $PUSH_SUCCESS 个，失败 $PUSH_FAILED 个"
        
        # 如果有推送失败，但至少有一个成功，给出警告
        if [ $PUSH_FAILED -gt 0 ] && [ $PUSH_SUCCESS -gt 0 ]; then
          echo "⚠️  部分推送失败，请检查仓库权限和网络连接"
          exit 1
        elif [ $PUSH_FAILED -gt 0 ]; then
          echo "❌ 所有推送都失败了"
          exit 1
        else
          echo "🎉 所有镜像推送成功！"
        fi
  - name: resolve 
    type: cnb:resolve
    options:
      key: build-cnb-$BUILD_ARCH

.amd64-arch-build-cnb: &amd64-arch-build-cnb
  name: build-amd64-cnb
  runner:
    tags: cnb:arch:amd64
  services:
    - docker
  env:
    BUILD_ARCH: amd64
  imports: https://cnb.cool/ilay1678/cloud-native-build/-/blob/main/github_secret.yml
  stages:
    - *make-image-envs-cnb
    - *build-by-arch-cnb

.arm64-arch-build-cnb: &arm64-arch-build-cnb
  name: build-arm64-cnb
  runner:
    tags: cnb:arch:arm64:v8
  env:
    BUILD_ARCH: arm64
  imports: https://cnb.cool/ilay1678/cloud-native-build/-/blob/main/github_secret.yml
  services:
    - docker
  stages:
    - *make-image-envs-cnb
    - *build-by-arch-cnb

# .multi-arch-push: &multi-arch-push-cnb
#   - name: await the amd64
#     type: cnb:await
#     options:
#       key: build-cnb-amd64
#   - name: await the arm64
#     type: cnb:await
#     options:
#       key: build-cnb-arm64
#   - name: manifest
#     image: cnbcool/manifest:latest
#     settings:
#       target: $IMAGE_NAME_WITH_TAG
#       template: ${IMAGE_NAME_WITH_TAG}-OS-ARCH
#       platforms:
#         - linux/amd64
#         - linux/arm64

main:
  push:
    - *amd64-arch-build-cnb
    - *arm64-arch-build-cnb
    # - name: conbine-arch-cnb
    #   imports: https://cnb.cool/ilay1678/cloud-native-build/-/blob/main/github_secret.yml
    #   services:
    #     - docker    
    #   stages:
    #     - *make-image-envs-cnb
    #     - *multi-arch-push-cnb