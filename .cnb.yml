include:
  # 构建、发布到 docker hub
  - https://cnb.cool/cnb/plugins/market/-/blob/main/hub.docker.com.yml
.make-image-envs-cnb: &make-image-envs-cnb
  - name: set IMAGE_NAME
    script: echo -n "$CNB_REPO_SLUG"
    exports:
      info: IMAGE_NAME
  - name: set IMAGE_VERSION
    script: echo -n "$CNB_BRANCH" | cut -d "/" -f1
    exports:
      info: IMAGE_VERSION
  - name: use latest if main
    if: |
      [ "$CNB_BRANCH" = "main" ]
    script: echo -n "latest"
    exports:
      info: IMAGE_VERSION
  - name: set IMAGE_NAME_WITH_TAG
    script: echo -n "${CNB_DOCKER_REGISTRY}/${IMAGE_NAME}:${IMAGE_VERSION}"
    exports:
      info: IMAGE_NAME_WITH_TAG

.build-by-arch-cnb: &build-by-arch-cnb
  - name: docker login for docker.cnb.cool
    script: docker login -u "$CNB_TOKEN_USER_NAME" -p "$CNB_TOKEN" $CNB_DOCKER_REGISTRY
  - name: set DOCKERFILE_DIR
    script: |
      if [ -f "docker/Dockerfile.linux.$BUILD_ARCH" ]; then
        echo -n "docker/Dockerfile.linux.$BUILD_ARCH"
      else
        echo -n "Dockerfile"
      fi
    exports:
      info: DOCKERFILE_DIR
  - name: docker build & push
    if: |
      [ -f $DOCKERFILE_DIR ]
    script:
      - docker build -f $DOCKERFILE_DIR -t $IMAGE_NAME_WITH_TAG-linux-$BUILD_ARCH .
      - docker push $IMAGE_NAME_WITH_TAG-linux-$BUILD_ARCH
  - name: resolve 
    type: cnb:resolve
    options:
      key: build-cnb-$BUILD_ARCH

.amd64-arch-build-cnb: &amd64-arch-build-cnb
  name: build-amd64-cnb
  runner:
    tags: cnb:arch:amd64
  services:
    - docker
  env:
    BUILD_ARCH: amd64
  stages:
    - *make-image-envs-cnb
    - *build-by-arch-cnb

.arm64-arch-build-cnb: &arm64-arch-build-cnb
  name: build-arm64-cnb
  runner:
    tags: cnb:arch:arm64:v8
  env:
    BUILD_ARCH: arm64
  services:
    - docker
  stages:
    - *make-image-envs-cnb
    - *build-by-arch-cnb

.multi-arch-push: &multi-arch-push-cnb
  - name: await the amd64
    type: cnb:await
    options:
      key: build-cnb-amd64
  - name: await the arm64
    type: cnb:await
    options:
      key: build-cnb-arm64
  - name: manifest
    image: cnbcool/manifest:latest
    settings:
      target: $IMAGE_NAME_WITH_TAG
      template: ${IMAGE_NAME_WITH_TAG}-OS-ARCH
      platforms:
        - linux/amd64
        - linux/arm64

main:
  push:
    - *amd64-arch-build-cnb
    - *arm64-arch-build-cnb
    - name: conbine-arch-cnb
      imports: https://cnb.cool/cnb/secrets/-/blob/main/envs/hub.docker.com.yml
      services:
        - docker    
      stages:
        - *make-image-envs-cnb
        - *multi-arch-push-cnb